{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/components/TestComponent.js\";\nimport React from 'react';\nexport default class TestComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    // fetch('PeterPan.txt')\n    // .then(response => response.text())\n    // .then(text => {\n    //     //text = text.replace(/\\n/ig, '');\n    //     let coolArray = text.split(/\\n\\n/ig)\n    //     for(let i = 0;i < coolArray.length; i++){\n    //         coolArray[i] = coolArray[i].replace(/\\n/ig, ' ');\n    //     }\n    //     coolArray = coolArray.filter(coolParagraph => {\n    //         if(coolParagraph.length > 100 && coolParagraph.length < 350){\n    //             return coolParagraph\n    //         }\n    //     })\n    //     for(let i = 0;i < coolArray.length; i++){\n    //         coolArray[i] = coolArray[i].replace(/_/ig, '');\n    //         if(coolArray[i].charAt(0) === \" \"){\n    //             coolArray[i] = coolArray[i].substr(1)\n    //         }\n    //     }\n    //     console.log(coolArray)\n    //ALREADY RUN - Dracula - Peter Pan\n    // for(let i = 0;i < coolArray.length; i++){\n    //     fetch(\"http://localhost:7777/challenges\",{\n    //         method: 'POST',\n    //         headers: {\"Content-Type\": \"application/json\"},\n    //         body: JSON.stringify({\n    //             paragraph: coolArray[i],\n    //             category: \"Peter Pan\"\n    //         })\n    //     })\n    //     .then(res => res.json())\n    //     .then(data => console.log(data))\n    // }\n    // })\n    console.log(localStorage.getItem(\"jwt\"));\n    fetch('http://localhost:7777/profile', {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n      }\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n\n  render() {\n    console.log(this.state.data);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"HI\");\n  }\n\n}","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/components/TestComponent.js"],"names":["React","TestComponent","Component","state","data","componentDidMount","console","log","localStorage","getItem","fetch","method","headers","Authorization","then","res","json","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GACjD;AAACC,MAAAA,IAAI,EAAE;AAAP,KADiD;AAAA;;AAEvDC,EAAAA,iBAAiB,GAAE;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAE,KAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYL,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AADN;AAF0B,KAAlC,CAAL,CAMGK,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQV,IAAI,IAAIE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAPhB;AASH;;AAEDa,EAAAA,MAAM,GAAE;AACJX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,IAAvB;AACA,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACH;;AAtDsD","sourcesContent":["import React from 'react';\n\nexport default class TestComponent extends React.Component {\n    state={data: null}\n    componentDidMount(){\n        \n        // fetch('PeterPan.txt')\n        // .then(response => response.text())\n        // .then(text => {\n        //     //text = text.replace(/\\n/ig, '');\n        //     let coolArray = text.split(/\\n\\n/ig)\n        //     for(let i = 0;i < coolArray.length; i++){\n        //         coolArray[i] = coolArray[i].replace(/\\n/ig, ' ');\n        //     }\n        //     coolArray = coolArray.filter(coolParagraph => {\n        //         if(coolParagraph.length > 100 && coolParagraph.length < 350){\n        //             return coolParagraph\n        //         }\n        //     })\n        //     for(let i = 0;i < coolArray.length; i++){\n        //         coolArray[i] = coolArray[i].replace(/_/ig, '');\n        //         if(coolArray[i].charAt(0) === \" \"){\n        //             coolArray[i] = coolArray[i].substr(1)\n        //         }\n        //     }\n        //     console.log(coolArray)\n            //ALREADY RUN - Dracula - Peter Pan\n            // for(let i = 0;i < coolArray.length; i++){\n            //     fetch(\"http://localhost:7777/challenges\",{\n            //         method: 'POST',\n            //         headers: {\"Content-Type\": \"application/json\"},\n            //         body: JSON.stringify({\n            //             paragraph: coolArray[i],\n            //             category: \"Peter Pan\"\n            //         })\n            //     })\n            //     .then(res => res.json())\n            //     .then(data => console.log(data))\n            // }\n        // })\n\n        console.log(localStorage.getItem(\"jwt\"))\n        fetch('http://localhost:7777/profile', {\n            method: 'GET',\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwt')}`\n            }\n          })\n          .then(res => res.json())\n          .then(data => console.log(data))\n\n    }\n\n    render(){\n        console.log(this.state.data)\n        return   <h1>HI</h1>;\n    }\n}"]},"metadata":{},"sourceType":"module"}