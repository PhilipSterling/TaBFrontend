{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js\";\nimport React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {};\n\n    this.handleChange = e => {\n      let percentage = this.state.percentage;\n      let input = e.target.value;\n      let index = input.length - 1;\n\n      if (this.state.allWords[0] !== undefined) {\n        if (index !== -1) {\n          if (input != \"\") {\n            if (this.state.allWords[0].charAt(index) != input.charAt(input.length - 1) && input != this.state.allWords[0] + \" \") {\n              if (!this.state.wordFlag) {\n                this.setState({\n                  errorNumber: ++this.state.errorNumber,\n                  wordFlag: true\n                });\n              }\n            }\n          }\n        }\n\n        if (input == this.state.allWords[0] + \" \") {\n          this.state.allWords.shift();\n          percentage = Math.floor((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords * 104);\n          console.log(percentage);\n          this.setState({\n            allWords: this.state.allWords,\n            wordFlag: false\n          });\n          input = \"\";\n          index = -1;\n        }\n\n        if (this.state.allWords[0] !== undefined) {\n          this.setState({\n            input,\n            index,\n            characAt: this.state.allWords[0].charAt(index),\n            percentage\n          });\n        }\n      } else if (this.state.allWords.length == 0) {\n        this.setState({\n          finished: true\n        });\n        this.finishGame();\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        input: \"\"\n      });\n      fetch(\"http://localhost/7777/games/\".concat(this.state.game_id), {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n        },\n        body: JSON.stringify({\n          endtime: Date.now()\n        })\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleStartGame = () => {\n      let tempID = 0;\n      fetch('http://localhost:7777/challenges/random', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt')),\n          categoryheader: this.state.chosenCategory\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          challengeID: data.id,\n          challengeCategory: data.category,\n          challenge: data.paragraph,\n          allWords: data.paragraph.split(\" \"),\n          numAllWords: data.paragraph.split(\" \").length\n        });\n        fetch('http://localhost:7777/games', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n          },\n          body: JSON.stringify({\n            user_id: this.props.location.state.user.id,\n            challenge_id: data.id\n          })\n        }).then(res => res.json()).then(data => this.setState({\n          gameID: data.id\n        }));\n      });\n    };\n\n    this.handleCategoryChange = e => {\n      this.setState({\n        chosenCategory: e.target.value\n      }); //render paragraph based on the selected category, default paragraphs from all category\n    };\n\n    this.state = {\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n      allWords: [],\n      numAllWords: 0,\n      game_id: undefined,\n      percentage: 0,\n      errorNumber: 0,\n      wordFlag: false,\n      finished: false,\n      chosenCategory: \"all\",\n      gameID: null\n    };\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = this.state.percentage - 7 + \"%\";\n    return React.createElement(\"div\", {\n      id: \"newgame-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      user: this.props.location.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"newgame-container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"category-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Category: \"), React.createElement(\"select\", {\n      className: \"category\",\n      onChange: this.handleCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"dracula\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Dracula\"), React.createElement(\"option\", {\n      value: \"peterpan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Peter Pan\")), React.createElement(\"button\", {\n      className: \"start-button\",\n      onClick: this.handleStartGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Start\")), React.createElement(\"div\", {\n      className: \"newgame-container3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"percentage-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-image\",\n      style: {\n        marginLeft: width\n      },\n      src: this.props.location.state.user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"inputcontainer\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.challenge), React.createElement(\"input\", {\n      className: \"typeinput\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        visibility: this.state.finished ? \"visible\" : \"hidden\"\n      },\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"goodjob\",\n      src: \"https://media.giphy.com/media/3o7abGQa0aRJUurpII/giphy.gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Good Job! \", this.props.location.state.user.username), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"You speed is:\")));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js"],"names":["React","Nav","GameContainer","Component","constructor","componentDidMount","handleChange","e","percentage","state","input","target","value","index","length","allWords","undefined","charAt","wordFlag","setState","errorNumber","shift","Math","floor","numAllWords","console","log","characAt","finished","finishGame","fetch","game_id","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","endtime","Date","now","handleSubmit","preventDefault","handleStartGame","tempID","categoryheader","chosenCategory","then","res","json","data","challengeID","id","challengeCategory","category","challenge","paragraph","split","user_id","props","location","user","challenge_id","gameID","handleCategoryChange","render","width","marginLeft","avatar","visibility","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor () {\n    super()\n    this.state={\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n      allWords: [],\n      numAllWords: 0,\n      game_id: undefined,\n      percentage: 0,\n      errorNumber: 0,\n      wordFlag: false,\n      finished: false,\n      chosenCategory: \"all\",\n      gameID: null\n    }\n  }\n\n  componentDidMount = () => {\n  }\n\n\n  handleChange = (e) => {\n    let percentage = this.state.percentage\n    let input = e.target.value\n    let index = input.length -1\n    if(this.state.allWords[0] !==  undefined){\n    if(index !== -1){\n      if(input != \"\"){\n        if(this.state.allWords[0].charAt(index) != input.charAt(input.length-1) && input != this.state.allWords[0] + \" \") {\n          if(!this.state.wordFlag){\n          this.setState({errorNumber: ++this.state.errorNumber,\n          wordFlag: true})}\n        }\n      }\n    }\n    if(input == this.state.allWords[0] + \" \"){\n      this.state.allWords.shift()\n      percentage = Math.floor(((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords) * 104)\n      console.log(percentage)\n      this.setState({allWords: this.state.allWords,\n        wordFlag: false,\n      })\n      input = \"\"\n      index = -1 \n    }\n    if(this.state.allWords[0] !== undefined){\n    this.setState({\n      input,\n      index,\n      characAt: this.state.allWords[0].charAt(index),\n      percentage\n    })\n  }\n    } else if(this.state.allWords.length == 0){\n      this.setState({finished:true})\n      this.finishGame()\n    }\n  }\n\n  finishGame = () => {\n    this.setState({input: \"\"})\n    fetch(`http://localhost/7777/games/${this.state.game_id}`, {\n      method: 'PATCH',\n      headers: {\"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`\n    },\n    body: JSON.stringify({\n      endtime: Date.now(),\n    })\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  handleStartGame = () => {\n    let tempID = 0;\n    fetch('http://localhost:7777/challenges/random', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        categoryheader: this.state.chosenCategory\n      }\n    })\n    .then(res => res.json())\n    .then(data => {this.setState({\n      challengeID: data.id,\n      challengeCategory: data.category,\n      challenge: data.paragraph,\n      allWords: data.paragraph.split(\" \"),\n      numAllWords: data.paragraph.split(\" \").length,\n    })\n      fetch('http://localhost:7777/games', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n     },\n     body: JSON.stringify({\n        user_id: this.props.location.state.user.id,\n        challenge_id: data.id,\n      })\n    }).then(res => res.json()).then(data => this.setState({gameID: data.id}))\n  })\n  }\n\n  handleCategoryChange = (e) => {\n    this.setState({chosenCategory: e.target.value})\n    //render paragraph based on the selected category, default paragraphs from all category\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = (this.state.percentage - 7) + \"%\";\n    return (\n      <div id=\"newgame-container\">\n        <Nav user={this.props.location.state.user} />\n\n        <div className=\"newgame-container2\">\n\n          <div className=\"category-container\">\n            <label>Category: </label>\n            <select\n              className=\"category\"\n              onChange={this.handleCategoryChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"dracula\">Dracula</option>\n              <option value=\"peterpan\">Peter Pan</option>\n            </select>\n            <button className=\"start-button\" onClick={this.handleStartGame}>Start</button>\n          </div>\n          <div className=\"newgame-container3\">\n            <div className=\"percentage-container\">\n              <img\n                className=\"avatar-image\"\n                style={{ marginLeft: width }}\n                src={this.props.location.state.user.avatar}\n              />\n            </div>\n            <form className=\"inputcontainer\" onSubmit={this.handleSubmit}>\n              {<p>{this.state.challenge}</p> }\n              <input\n                className=\"typeinput\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.input}\n              />\n            </form>\n          </div>\n        </div>\n\n        {/*pop up component */}\n        <div\n          style={{\n            visibility: this.state.finished ? \"visible\" : \"hidden\"\n          }}\n          className=\"popup\"\n        >\n          <img className=\"goodjob\" src=\"https://media.giphy.com/media/3o7abGQa0aRJUurpII/giphy.gif\" />\n          <h3>Good Job! {this.props.location.state.user.username}</h3>\n          <h3>You speed is:</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}