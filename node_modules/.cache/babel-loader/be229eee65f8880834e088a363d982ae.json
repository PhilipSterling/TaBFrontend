{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/components/TestComponent.js\";\nimport React from 'react';\nexport default class TestComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('PeterPan.txt').then(response => response.text()).then(text => {\n      //text = text.replace(/\\n/ig, '');\n      let coolArray = text.split(/\\n\\n/ig);\n\n      for (let i = 0; i < coolArray.length; i++) {\n        coolArray[i] = coolArray[i].replace(/\\n/ig, ' ');\n      }\n\n      coolArray = coolArray.filter(coolParagraph => {\n        if (coolParagraph.length > 100 && coolParagraph.length < 350) {\n          return coolParagraph;\n        }\n      });\n\n      for (let i = 0; i < coolArray.length; i++) {\n        coolArray[i] = coolArray[i].replace(/_/ig, '');\n        coolArray[i] = coolArray[i].replace(/[“”]/ig, '\\\"');\n\n        if (coolArray[i].charAt(0) === \" \") {\n          coolArray[i] = coolArray[i].substr(1);\n        }\n      }\n\n      console.log(coolArray); //ALREADY RUN - Dracula - Peter Pan\n\n      for (let i = 0; i < coolArray.length; i++) {\n        fetch(\"https://polar-caverns-14212.herokuapp.com/challenges\", {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n          },\n          body: JSON.stringify({\n            paragraph: coolArray[i],\n            category: \"Peter Pan\"\n          })\n        }).then(res => res.json()).then(data => console.log(data));\n      }\n    }); // fetch('http://localhost:7777/profile', {\n    //     method: 'GET',\n    //     headers: {\n    //       Authorization: `Bearer hao`\n    //     }\n    //   })\n    //   .then(res => res.json())\n    //   .then(data => console.log(data))\n  }\n\n  render() {\n    console.log(this.state.data);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"HI\");\n  }\n\n}","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/components/TestComponent.js"],"names":["React","TestComponent","Component","state","data","componentDidMount","fetch","then","response","text","coolArray","split","i","length","replace","filter","coolParagraph","charAt","substr","console","log","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","paragraph","category","res","json","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GACjD;AAACC,MAAAA,IAAI,EAAE;AAAP,KADiD;AAAA;;AAEvDC,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACV;AACA,UAAIC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,QAAX,CAAhB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGF,SAAS,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpCF,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAeF,SAAS,CAACE,CAAD,CAAT,CAAaE,OAAb,CAAqB,MAArB,EAA6B,GAA7B,CAAf;AACH;;AACDJ,MAAAA,SAAS,GAAGA,SAAS,CAACK,MAAV,CAAiBC,aAAa,IAAI;AAC1C,YAAGA,aAAa,CAACH,MAAd,GAAuB,GAAvB,IAA8BG,aAAa,CAACH,MAAd,GAAuB,GAAxD,EAA4D;AACxD,iBAAOG,aAAP;AACH;AACJ,OAJW,CAAZ;;AAKA,WAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGF,SAAS,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpCF,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAeF,SAAS,CAACE,CAAD,CAAT,CAAaE,OAAb,CAAqB,KAArB,EAA4B,EAA5B,CAAf;AACAJ,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAeF,SAAS,CAACE,CAAD,CAAT,CAAaE,OAAb,CAAqB,QAArB,EAA+B,IAA/B,CAAf;;AACA,YAAGJ,SAAS,CAACE,CAAD,CAAT,CAAaK,MAAb,CAAoB,CAApB,MAA2B,GAA9B,EAAkC;AAC9BP,UAAAA,SAAS,CAACE,CAAD,CAAT,GAAeF,SAAS,CAACE,CAAD,CAAT,CAAaM,MAAb,CAAoB,CAApB,CAAf;AACH;AACJ;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ,EAlBU,CAmBV;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGF,SAAS,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpCN,QAAAA,KAAK,CAAC,sDAAD,EAAwD;AACzDe,UAAAA,MAAM,EAAE,MADiD;AAEzDC,UAAAA,OAAO,EAAE;AAAC,4BAAgB,kBAAjB;AACTC,YAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AADJ,WAFgD;AAIzDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,YAAAA,SAAS,EAAEnB,SAAS,CAACE,CAAD,CADH;AAEjBkB,YAAAA,QAAQ,EAAE;AAFO,WAAf;AAJmD,SAAxD,CAAL,CASCvB,IATD,CASMwB,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATb,EAUCzB,IAVD,CAUMH,IAAI,IAAIe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CAVd;AAWH;AACJ,KAnCD,EAFe,CAwCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAED6B,EAAAA,MAAM,GAAE;AACJd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,IAAvB;AACA,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACH;;AAxDsD","sourcesContent":["import React from 'react';\n\nexport default class TestComponent extends React.Component {\n    state={data: null}\n    componentDidMount(){\n        \n        fetch('PeterPan.txt')\n        .then(response => response.text())\n        .then(text => {\n            //text = text.replace(/\\n/ig, '');\n            let coolArray = text.split(/\\n\\n/ig)\n            for(let i = 0;i < coolArray.length; i++){\n                coolArray[i] = coolArray[i].replace(/\\n/ig, ' ');\n            }\n            coolArray = coolArray.filter(coolParagraph => {\n                if(coolParagraph.length > 100 && coolParagraph.length < 350){\n                    return coolParagraph\n                }\n            })\n            for(let i = 0;i < coolArray.length; i++){\n                coolArray[i] = coolArray[i].replace(/_/ig, '');\n                coolArray[i] = coolArray[i].replace(/[“”]/ig, '\\\"')\n                if(coolArray[i].charAt(0) === \" \"){\n                    coolArray[i] = coolArray[i].substr(1)\n                }\n            }\n            console.log(coolArray)\n            //ALREADY RUN - Dracula - Peter Pan\n            for(let i = 0;i < coolArray.length; i++){\n                fetch(\"https://polar-caverns-14212.herokuapp.com/challenges\",{\n                    method: 'POST',\n                    headers: {\"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem('jwt')}`   },\n                    body: JSON.stringify({\n                        paragraph: coolArray[i],\n                        category: \"Peter Pan\"\n                    })\n                })\n                .then(res => res.json())\n                .then(data => console.log(data))\n            }\n        })\n\n\n        // fetch('http://localhost:7777/profile', {\n        //     method: 'GET',\n        //     headers: {\n        //       Authorization: `Bearer hao`\n        //     }\n        //   })\n        //   .then(res => res.json())\n        //   .then(data => console.log(data))\n\n    }\n\n    render(){\n        console.log(this.state.data)\n        return   <h1>HI</h1>;\n    }\n}"]},"metadata":{},"sourceType":"module"}