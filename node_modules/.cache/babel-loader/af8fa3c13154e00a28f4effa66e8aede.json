{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js\";\nimport React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch('http://localhost:7777/challenges/random', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt')),\n          categoryheader: this.state.chosenCategory\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          challengeID: data.id,\n          challengeCategory: data.category,\n          challenge: data.paragraph,\n          allWords: data.paragraph.split(\" \"),\n          numAllWords: data.paragraph.split(\" \").length\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      let percentage = this.state.percentage;\n      let input = e.target.value;\n      let index = input.length - 1;\n\n      if (this.state.allWords[0] !== undefined) {\n        if (index !== -1) {\n          if (input != \"\") {\n            if (this.state.allWords[0].charAt(index) != input.charAt(input.length - 1) && input != this.state.allWords[0] + \" \") {\n              if (!this.state.wordFlag) {\n                this.setState({\n                  errorNumber: ++this.state.errorNumber,\n                  wordFlag: true\n                });\n              }\n            }\n          }\n        }\n\n        if (input == this.state.allWords[0] + \" \") {\n          this.state.allWords.shift();\n          percentage = Math.floor((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords * 104);\n          console.log(percentage);\n          this.setState({\n            allWords: this.state.allWords,\n            wordFlag: false\n          });\n          input = \"\";\n          index = -1;\n        }\n\n        if (this.state.allWords[0] !== undefined) {\n          this.setState({\n            input,\n            index,\n            characAt: this.state.allWords[0].charAt(index),\n            percentage\n          });\n        }\n      } else if (this.state.allWords.length == 0) {\n        this.finishGame();\n      }\n    };\n\n    this.finishGame = () => {\n      this.setState({\n        input: \"\"\n      });\n      fetch(\"http://localhost/7777/games/\".concat(this.state.game_id), {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n        },\n        body: JSON.stringify({\n          endtime: Date.now()\n        })\n      }).then(res => res.json()).then(data => {\n        fetch(\"http://localhost/7777/games/\".concat(this.state.game_id), {\n          method: 'PATCH',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n          },\n          body: JSON.stringify({})\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleStartGame = () => {\n      fetch('http://localhost:7777/challenges/random', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt')),\n          categoryheader: this.state.chosenCategory\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          challengeID: data.id,\n          challengeCategory: data.category,\n          challenge: data.paragraph,\n          allWords: data.paragraph.split(\" \"),\n          numAllWords: data.paragraph.split(\" \").length\n        });\n      });\n    };\n\n    this.handleCategoryChange = e => {\n      this.setState({\n        chosenCategory: e.target.value\n      }); //render paragraph based on the selected category, default paragraphs from all category\n    };\n\n    this.state = {\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n      allWords: [],\n      numAllWords: 0,\n      game_id: undefined,\n      percentage: 0,\n      errorNumber: 0,\n      wordFlag: false,\n      finished: false,\n      chosenCategory: \"all\"\n    };\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = this.state.percentage - 7 + \"%\";\n    return React.createElement(\"div\", {\n      id: \"newgame-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      user: this.props.location.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"newgame-container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"category-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Category: \"), React.createElement(\"select\", {\n      className: \"category\",\n      onChange: this.handleCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"dracula\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Dracula\"), React.createElement(\"option\", {\n      value: \"peterpan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Peter Pan\")), React.createElement(\"button\", {\n      className: \"start-button\",\n      onClick: this.handleStartGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Start\")), React.createElement(\"div\", {\n      className: \"newgame-container3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"percentage-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-image\",\n      style: {\n        marginLeft: width\n      },\n      src: this.props.location.state.user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"inputcontainer\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.challenge), React.createElement(\"input\", {\n      className: \"typeinput\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        visibility: this.state.finished ? \"visible\" : \"hidden\"\n      },\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"goodjob\",\n      src: \"https://media.giphy.com/media/3o7abGQa0aRJUurpII/giphy.gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Good Job! \", this.props.location.state.user.username), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"You speed is:\")));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js"],"names":["React","Nav","GameContainer","Component","constructor","componentDidMount","fetch","method","headers","Authorization","localStorage","getItem","categoryheader","state","chosenCategory","then","res","json","data","setState","challengeID","id","challengeCategory","category","challenge","paragraph","allWords","split","numAllWords","length","handleChange","e","percentage","input","target","value","index","undefined","charAt","wordFlag","errorNumber","shift","Math","floor","console","log","characAt","finishGame","game_id","body","JSON","stringify","endtime","Date","now","handleSubmit","preventDefault","handleStartGame","handleCategoryChange","finished","render","width","props","location","user","marginLeft","avatar","visibility","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor () {\n    super()\n    this.state={\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n\n      allWords: [],\n      numAllWords: 0,\n      game_id: undefined,\n      percentage: 0,\n      errorNumber: 0,\n      wordFlag: false,\n      finished: false,\n      chosenCategory: \"all\",\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('http://localhost:7777/challenges/random', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        categoryheader: this.state.chosenCategory\n      }\n    })\n    .then(res => res.json())\n    .then(data => {this.setState({\n      challengeID: data.id,\n      challengeCategory: data.category,\n      challenge: data.paragraph,\n      allWords: data.paragraph.split(\" \"),\n      numAllWords: data.paragraph.split(\" \").length,\n    })\n  })\n  }\n\n\n  handleChange = (e) => {\n    let percentage = this.state.percentage\n    let input = e.target.value\n    let index = input.length -1\n    if(this.state.allWords[0] !==  undefined){\n    if(index !== -1){\n      if(input != \"\"){\n        if(this.state.allWords[0].charAt(index) != input.charAt(input.length-1) && input != this.state.allWords[0] + \" \") {\n          if(!this.state.wordFlag){\n          this.setState({errorNumber: ++this.state.errorNumber,\n          wordFlag: true})}\n        }\n      }\n    }\n    if(input == this.state.allWords[0] + \" \"){\n      this.state.allWords.shift()\n      percentage = Math.floor(((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords) * 104)\n      console.log(percentage)\n      this.setState({allWords: this.state.allWords,\n        wordFlag: false,\n      })\n      input = \"\"\n      index = -1 \n    }\n    if(this.state.allWords[0] !== undefined){\n    this.setState({\n      input,\n      index,\n      characAt: this.state.allWords[0].charAt(index),\n      percentage\n    })\n  }\n    } else if(this.state.allWords.length == 0){\n      this.finishGame()\n    }\n  }\n\n  finishGame = () => {\n    this.setState({input: \"\"})\n    fetch(`http://localhost/7777/games/${this.state.game_id}`, {\n      method: 'PATCH',\n      headers: {\"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`\n    },\n    body: JSON.stringify({\n      endtime: Date.now(),\n    })\n    })\n    .then(res => res.json())\n    .then(data => {\n      fetch(`http://localhost/7777/games/${this.state.game_id}`, {\n        method: 'PATCH',\n        headers: {\"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`},\n        body: JSON.stringify({\n        })\n      })\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  handleStartGame = () => {\n    fetch('http://localhost:7777/challenges/random', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        categoryheader: this.state.chosenCategory\n      }\n    })\n    .then(res => res.json())\n    .then(data => {this.setState({\n      challengeID: data.id,\n      challengeCategory: data.category,\n      challenge: data.paragraph,\n      allWords: data.paragraph.split(\" \"),\n      numAllWords: data.paragraph.split(\" \").length,\n    })\n  })\n  }\n\n  handleCategoryChange = (e) => {\n    this.setState({chosenCategory: e.target.value})\n    //render paragraph based on the selected category, default paragraphs from all category\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = (this.state.percentage - 7) + \"%\";\n    return (\n      <div id=\"newgame-container\">\n        <Nav user={this.props.location.state.user} />\n\n        <div className=\"newgame-container2\">\n\n          <div className=\"category-container\">\n            <label>Category: </label>\n            <select\n              className=\"category\"\n              onChange={this.handleCategoryChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"dracula\">Dracula</option>\n              <option value=\"peterpan\">Peter Pan</option>\n            </select>\n            <button className=\"start-button\" onClick={this.handleStartGame}>Start</button>\n          </div>\n          <div className=\"newgame-container3\">\n            <div className=\"percentage-container\">\n              <img\n                className=\"avatar-image\"\n                style={{ marginLeft: width }}\n                src={this.props.location.state.user.avatar}\n              />\n            </div>\n            <form className=\"inputcontainer\" onSubmit={this.handleSubmit}>\n              {<p>{this.state.challenge}</p> }\n              <input\n                className=\"typeinput\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.input}\n              />\n            </form>\n          </div>\n        </div>\n\n        {/*pop up component */}\n        <div\n          style={{\n            visibility: this.state.finished ? \"visible\" : \"hidden\"\n          }}\n          className=\"popup\"\n        >\n          <img className=\"goodjob\" src=\"https://media.giphy.com/media/3o7abGQa0aRJUurpII/giphy.gif\" />\n          <h3>Good Job! {this.props.location.state.user.username}</h3>\n          <h3>You speed is:</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}