{"ast":null,"code":"var _jsxFileName = \"/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js\";\nimport React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch('http://localhost:7777/challenges/random', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('jwt'))\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          challengeID: data.id,\n          challengeCategory: data.category,\n          challenge: data.paragraph,\n          allWords: data.paragraph.split(\" \"),\n          numAllWords: data.paragraph.split(\" \").length\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      let percentage = this.state.percentage;\n      let input = e.target.value;\n      let index = input.length - 1;\n\n      if (input == this.state.allWords[0] + \" \") {\n        this.state.allWords.shift();\n        percentage = Math.floor((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords);\n        this.setState({\n          allWords: this.state.allWords\n        });\n        input = \"\";\n        index = 0;\n      }\n\n      this.setState({\n        input,\n        index,\n        characAt: this.state.challenge.charAt(index),\n        percentage\n      });\n\n      if (this.state.allWords[0] === undefined) {\n        this.finishGame();\n      }\n    };\n\n    this.finishGame = () => {\n      console.log(\"ashdojabhwdkjhawkudhakwhdkhawgdkjahwdkgawjdhakjwbdkjawbdkuabwkjhdbawkjd\");\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleCategoryChange = e => {\n      console.log(e.target.value); //render paragraph based on the selected category, default paragraphs from all category\n    };\n\n    this.state = {\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n      allWords: [],\n      numAllWords: 0\n    };\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = this.state.percentage + \"%\";\n    return React.createElement(\"div\", {\n      id: \"newgame-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      user: this.props.location.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"newgame-container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Category: \"), React.createElement(\"select\", {\n      className: \"category\",\n      onChange: this.handleCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"dracula\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Dracula\"), React.createElement(\"option\", {\n      value: \"peterpan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Peter Pan\")), React.createElement(\"div\", {\n      className: \"newgame-container3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"percentage-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-image\",\n      style: {\n        marginLeft: width\n      },\n      src: this.props.location.state.user.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"inputcontainer\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.challenge), React.createElement(\"input\", {\n      className: \"typeinput\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/philipsterling/flatiron/Mod4/Week-11/TaBTypeRacer/tab-type-racer-front-end/src/containers/GameContainer.js"],"names":["React","Nav","GameContainer","Component","constructor","componentDidMount","fetch","method","headers","Authorization","localStorage","getItem","then","res","json","data","setState","challengeID","id","challengeCategory","category","challenge","paragraph","allWords","split","numAllWords","length","handleChange","e","percentage","state","input","target","value","index","shift","Math","floor","characAt","charAt","undefined","finishGame","console","log","handleSubmit","preventDefault","handleCategoryChange","render","width","props","location","user","marginLeft","avatar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from './Nav';\nimport \"../css/gamecontainer.css\";\n\nclass GameContainer extends React.Component {\n  constructor () {\n    super()\n    this.state={\n      challengeID: '',\n      challengeCategory: '',\n      challenge: '',\n      input: '',\n      index: null,\n      characAt: \"\",\n      allWords: [],\n      numAllWords: 0,\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('http://localhost:7777/challenges/random', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`\n      }\n    })\n    .then(res => res.json())\n    .then(data => {this.setState({\n      challengeID: data.id,\n      challengeCategory: data.category,\n      challenge: data.paragraph,\n      allWords: data.paragraph.split(\" \"),\n      numAllWords: data.paragraph.split(\" \").length,\n    })\n  })\n  }\n\n\n  handleChange = (e) => {\n    let percentage = this.state.percentage\n    let input = e.target.value\n    let index = input.length -1\n    if(input == this.state.allWords[0] + \" \"){\n      this.state.allWords.shift()\n      percentage = Math.floor((this.state.numAllWords - this.state.allWords.length) / this.state.numAllWords)\n      this.setState({allWords: this.state.allWords,\n      })\n      input = \"\"\n      index = 0\n    }\n    this.setState({\n      input,\n      index,\n      characAt: this.state.challenge.charAt(index),\n      percentage\n    })\n    if(this.state.allWords[0] === undefined){\n      this.finishGame()\n    }\n  }\n\n  finishGame = () => {\n    console.log(\"ashdojabhwdkjhawkudhakwhdkhawgdkjahwdkgawjdhakjwbdkjawbdkuabwkjhdbawkjd\")\n    \n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  handleCategoryChange = (e) => {\n    console.log(e.target.value);\n    //render paragraph based on the selected category, default paragraphs from all category\n  }\n\n  render() {\n    //percentage finished of the paragraph\n    const width = this.state.percentage + \"%\";\n    return (\n      <div id=\"newgame-container\">\n        <Nav user={this.props.location.state.user} />\n        <div className=\"newgame-container2\">\n          <label>Category: </label>\n          <select className=\"category\" onChange={this.handleCategoryChange}>\n            <option value=\"all\">All</option>\n            <option value=\"dracula\">Dracula</option>\n            <option value=\"peterpan\">Peter Pan</option>\n          </select>\n          <div className=\"newgame-container3\">\n            <div className=\"percentage-container\">\n              <img\n                className=\"avatar-image\"\n                style={{ marginLeft: width }}\n                src={this.props.location.state.user.avatar}\n              />\n            </div>\n            <form className=\"inputcontainer\" onSubmit={this.handleSubmit}>\n              {<p>{this.state.challenge}</p> }\n              <input\n                className=\"typeinput\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.input}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}